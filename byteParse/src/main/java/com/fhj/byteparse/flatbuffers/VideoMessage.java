// automatically generated by the FlatBuffers compiler, do not modify

package com.fhj.byteparse.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class VideoMessage extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static VideoMessage getRootAsVideoMessage(ByteBuffer _bb) { return getRootAsVideoMessage(_bb, new VideoMessage()); }
  public static VideoMessage getRootAsVideoMessage(ByteBuffer _bb, VideoMessage obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public VideoMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String videoName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer videoNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer videoNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public long videoSize() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public String videoType() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer videoTypeAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer videoTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public long videoDuration() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long videoWidth() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long videoHeight() { int o = __offset(14); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long videoBitrate() { int o = __offset(16); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long videoFps() { int o = __offset(18); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public byte videoCover(int j) { int o = __offset(20); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int videoCoverLength() { int o = __offset(20); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector videoCoverVector() { return videoCoverVector(new ByteVector()); }
  public ByteVector videoCoverVector(ByteVector obj) { int o = __offset(20); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer videoCoverAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer videoCoverInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  public byte videoStream(int j) { int o = __offset(22); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int videoStreamLength() { int o = __offset(22); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector videoStreamVector() { return videoStreamVector(new ByteVector()); }
  public ByteVector videoStreamVector(ByteVector obj) { int o = __offset(22); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer videoStreamAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer videoStreamInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }

  public static int createVideoMessage(FlatBufferBuilder builder,
      int videoNameOffset,
      long videoSize,
      int videoTypeOffset,
      long videoDuration,
      long videoWidth,
      long videoHeight,
      long videoBitrate,
      long videoFps,
      int videoCoverOffset,
      int videoStreamOffset) {
    builder.startTable(10);
    VideoMessage.addVideoStream(builder, videoStreamOffset);
    VideoMessage.addVideoCover(builder, videoCoverOffset);
    VideoMessage.addVideoFps(builder, videoFps);
    VideoMessage.addVideoBitrate(builder, videoBitrate);
    VideoMessage.addVideoHeight(builder, videoHeight);
    VideoMessage.addVideoWidth(builder, videoWidth);
    VideoMessage.addVideoDuration(builder, videoDuration);
    VideoMessage.addVideoType(builder, videoTypeOffset);
    VideoMessage.addVideoSize(builder, videoSize);
    VideoMessage.addVideoName(builder, videoNameOffset);
    return VideoMessage.endVideoMessage(builder);
  }

  public static void startVideoMessage(FlatBufferBuilder builder) { builder.startTable(10); }
  public static void addVideoName(FlatBufferBuilder builder, int videoNameOffset) { builder.addOffset(0, videoNameOffset, 0); }
  public static void addVideoSize(FlatBufferBuilder builder, long videoSize) { builder.addInt(1, (int) videoSize, (int) 0L); }
  public static void addVideoType(FlatBufferBuilder builder, int videoTypeOffset) { builder.addOffset(2, videoTypeOffset, 0); }
  public static void addVideoDuration(FlatBufferBuilder builder, long videoDuration) { builder.addInt(3, (int) videoDuration, (int) 0L); }
  public static void addVideoWidth(FlatBufferBuilder builder, long videoWidth) { builder.addInt(4, (int) videoWidth, (int) 0L); }
  public static void addVideoHeight(FlatBufferBuilder builder, long videoHeight) { builder.addInt(5, (int) videoHeight, (int) 0L); }
  public static void addVideoBitrate(FlatBufferBuilder builder, long videoBitrate) { builder.addInt(6, (int) videoBitrate, (int) 0L); }
  public static void addVideoFps(FlatBufferBuilder builder, long videoFps) { builder.addInt(7, (int) videoFps, (int) 0L); }
  public static void addVideoCover(FlatBufferBuilder builder, int videoCoverOffset) { builder.addOffset(8, videoCoverOffset, 0); }
  public static int createVideoCoverVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createVideoCoverVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startVideoCoverVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addVideoStream(FlatBufferBuilder builder, int videoStreamOffset) { builder.addOffset(9, videoStreamOffset, 0); }
  public static int createVideoStreamVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createVideoStreamVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startVideoStreamVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endVideoMessage(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public VideoMessage get(int j) { return get(new VideoMessage(), j); }
    public VideoMessage get(VideoMessage obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

