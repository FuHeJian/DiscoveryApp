// automatically generated by the FlatBuffers compiler, do not modify

package com.fhj.byteparse.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class FileMessage extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static FileMessage getRootAsFileMessage(ByteBuffer _bb) { return getRootAsFileMessage(_bb, new FileMessage()); }
  public static FileMessage getRootAsFileMessage(ByteBuffer _bb, FileMessage obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FileMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String fileName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer fileNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer fileNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public long fileSize() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public String fileType() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer fileTypeAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer fileTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public byte fileData(int j) { int o = __offset(10); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int fileDataLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector fileDataVector() { return fileDataVector(new ByteVector()); }
  public ByteVector fileDataVector(ByteVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer fileDataAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer fileDataInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static int createFileMessage(FlatBufferBuilder builder,
      int fileNameOffset,
      long fileSize,
      int fileTypeOffset,
      int fileDataOffset) {
    builder.startTable(4);
    FileMessage.addFileData(builder, fileDataOffset);
    FileMessage.addFileType(builder, fileTypeOffset);
    FileMessage.addFileSize(builder, fileSize);
    FileMessage.addFileName(builder, fileNameOffset);
    return FileMessage.endFileMessage(builder);
  }

  public static void startFileMessage(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addFileName(FlatBufferBuilder builder, int fileNameOffset) { builder.addOffset(0, fileNameOffset, 0); }
  public static void addFileSize(FlatBufferBuilder builder, long fileSize) { builder.addInt(1, (int) fileSize, (int) 0L); }
  public static void addFileType(FlatBufferBuilder builder, int fileTypeOffset) { builder.addOffset(2, fileTypeOffset, 0); }
  public static void addFileData(FlatBufferBuilder builder, int fileDataOffset) { builder.addOffset(3, fileDataOffset, 0); }
  public static int createFileDataVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createFileDataVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startFileDataVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endFileMessage(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FileMessage get(int j) { return get(new FileMessage(), j); }
    public FileMessage get(FileMessage obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

