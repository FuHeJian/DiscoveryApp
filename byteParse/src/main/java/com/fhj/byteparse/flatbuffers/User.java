// automatically generated by the FlatBuffers compiler, do not modify

package com.fhj.byteparse.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class User extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static User getRootAsUser(ByteBuffer _bb) { return getRootAsUser(_bb, new User()); }
  public static User getRootAsUser(ByteBuffer _bb, User obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public User __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String device() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer deviceAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer deviceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String deviceSerial() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer deviceSerialAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer deviceSerialInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String name() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String ip() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ipAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer ipInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static int createUser(FlatBufferBuilder builder,
      int deviceOffset,
      int deviceSerialOffset,
      int nameOffset,
      int ipOffset) {
    builder.startTable(4);
    User.addIp(builder, ipOffset);
    User.addName(builder, nameOffset);
    User.addDeviceSerial(builder, deviceSerialOffset);
    User.addDevice(builder, deviceOffset);
    return User.endUser(builder);
  }

  public static void startUser(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addDevice(FlatBufferBuilder builder, int deviceOffset) { builder.addOffset(0, deviceOffset, 0); }
  public static void addDeviceSerial(FlatBufferBuilder builder, int deviceSerialOffset) { builder.addOffset(1, deviceSerialOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(2, nameOffset, 0); }
  public static void addIp(FlatBufferBuilder builder, int ipOffset) { builder.addOffset(3, ipOffset, 0); }
  public static int endUser(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public User get(int j) { return get(new User(), j); }
    public User get(User obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

